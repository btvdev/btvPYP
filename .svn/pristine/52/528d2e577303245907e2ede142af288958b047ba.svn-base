package com.btvpyp.utils;

import java.io.BufferedReader;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import java.io.OutputStream;
import java.io.PrintWriter;
import java.io.UnsupportedEncodingException;
import java.net.HttpURLConnection;
import java.net.MalformedURLException;
import java.net.ProtocolException;
import java.net.URL;
import java.net.URLConnection;
import java.net.URLDecoder;
import java.util.List;
import java.util.Map;

import org.apache.http.HttpResponse;
import org.apache.http.client.ClientProtocolException;
import org.apache.http.client.methods.HttpPost;
import org.apache.http.entity.StringEntity;
import org.apache.http.impl.client.DefaultHttpClient;
import org.apache.http.message.BasicHeader;
import org.apache.http.protocol.HTTP;
import org.apache.http.util.EntityUtils;

public class HttpClient {
	
    /**
     * 向指定URL发送GET方法的请求
     * 
     * @param url
     *            发送请求的URL
     * @param param
     *            请求参数，请求参数应该是 name1=value1&name2=value2 的形式。
     * @return URL 所代表远程资源的响应结果
     * @throws Exception 
     */
    public static String sendGet(String url) throws Exception {
        String result = "";
        BufferedReader in = null;
        try {
            String urlNameString = url;
            URL realUrl = new URL(urlNameString);
            // 打开和URL之间的连接
            URLConnection connection = realUrl.openConnection();
            // 设置通用的请求属性
            connection.setRequestProperty("accept", "*/*");
            connection.setRequestProperty("connection", "Keep-Alive");
            connection.setRequestProperty("user-agent",
                    "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
            // 建立实际的连接
            connection.connect();
            // 获取所有响应头字段
            Map<String, List<String>> map = connection.getHeaderFields();
            // 遍历所有的响应头字段
//            for (String key : map.keySet()) {
//                System.out.println(key + "--->" + map.get(key));
//            }
            // 定义 BufferedReader输入流来读取URL的响应
            in = new BufferedReader(new InputStreamReader(
                    connection.getInputStream(),"UTF-8"));
            String line;
            while ((line = in.readLine()) != null) {
                result += line;
            }
//            System.out.println(URLDecoder.decode(result, "UTF-8"));
            System.out.println(result.getBytes("UTF-8"));
        } catch (Exception e) {
            System.out.println("发送GET请求出现异常！" + e);
            e.printStackTrace();
        }
        // 使用finally块来关闭输入流
        finally {
            try {
                if (in != null) {
                    in.close();
                }
            } catch (Exception e2) {
                e2.printStackTrace();
            }
        }
        return URLDecoder.decode(result, "UTF-8").toString();
    }

    /**
     * 向指定 URL 发送POST方法的请求
     * 
     * @param url
     *            发送请求的 URL
     * @param param
     *            请求参数，请求参数应该是 name1=value1&name2=value2 的形式。
     * @return 所代表远程资源的响应结果
     */
    public static String sendPost(String url, String param) {
        PrintWriter out = null;
        BufferedReader in = null;
        String result = "";
        try {
            URL realUrl = new URL(url);
            // 打开和URL之间的连接
            URLConnection conn = realUrl.openConnection();
            // 设置通用的请求属性
            conn.setRequestProperty("accept", "*/*");
            conn.setRequestProperty("connection", "Keep-Alive");
            conn.setRequestProperty("user-agent", "Mozilla/4.0 (compatible; MSIE 6.0; Windows NT 5.1;SV1)");
                    
            // 发送POST请求必须设置如下两行
            conn.setDoOutput(true);
            conn.setDoInput(true);
            // 获取URLConnection对象对应的输出流
            out = new PrintWriter(conn.getOutputStream());
            // 发送请求参数
            out.print(param);
            // flush输出流的缓冲
            out.flush();
            // 定义BufferedReader输入流来读取URL的响应
            in = new BufferedReader(
                    new InputStreamReader(conn.getInputStream()));
            String line;
            while ((line = in.readLine()) != null) {
                result += line;
            }
        } catch (Exception e) {
            System.out.println("发送 POST 请求出现异常！"+e);
            e.printStackTrace();
        }
        //使用finally块来关闭输出流、输入流
        finally{
            try{
                if(out!=null){
                    out.close();
                }
                if(in!=null){
                    in.close();
                }
            }
            catch(IOException ex){
                ex.printStackTrace();
            }
        }
        return result;
    }
    
    /**
     * 通过post请求将json放在body中进行发送
     * @param url  目标接口地址
     * @param jsonstr   json字符串
     */
    public static String doPost(String url, String jsonstr) {
    	String result = "push false";
    	DefaultHttpClient httpClient = new DefaultHttpClient();
    	HttpPost httpPost = new HttpPost(url);
    	httpPost.addHeader(HTTP.CONTENT_TYPE, "application/json");
    	
    	try {
			StringEntity se = new StringEntity(jsonstr, "UTF-8");
			se.setContentType("text/json");
			se.setContentEncoding(new BasicHeader(HTTP.CONTENT_TYPE, "application/json"));
			httpPost.setEntity(se);
			HttpResponse response = httpClient.execute(httpPost);
			if(response != null && response.getStatusLine().getStatusCode() == 200) {
				result = EntityUtils.toString(response.getEntity());
			}
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (ClientProtocolException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
		}
    	return result;
    }
    /**
     * HttpURLConnection方式请求webservice服务
     * @param requestUrl 请求地址
     * @param soap 请求体字符串
     * @return
     */
    public static String sendWsPost(String requestUrl, String soap) {
    	//服务的地址  
        HttpURLConnection conn = null;
		try {
			URL wsUrl = new URL(requestUrl);  
			  
			conn = (HttpURLConnection) wsUrl.openConnection();  
			conn.setDoInput(true);  
			conn.setDoOutput(true);  
			conn.setRequestMethod("POST");  
			conn.setRequestProperty("Content-Type", "text/xml;charset=UTF-8");  
			  
			OutputStream os = conn.getOutputStream();  
			os.write(soap.getBytes("UTF-8"));  
			InputStream is = conn.getInputStream();
			  
			byte[] b = new byte[1024];  
			int len = 0;  
			String s = "";  
			while((len = is.read(b)) != -1){  
			    String ss = new String(b,0,len,"UTF-8");  
			    s += ss;  
			}  
			System.out.println(s);  
			  
			is.close();  
			os.close();
		} catch (MalformedURLException e) {
			e.printStackTrace();
		} catch (ProtocolException e) {
			e.printStackTrace();
		} catch (UnsupportedEncodingException e) {
			e.printStackTrace();
		} catch (IOException e) {
			e.printStackTrace();
			conn.disconnect();  
		}  
        return "";
    }
    
    public static void main(String args[]) throws Exception{
//		String ss = doPost("http://localhost:8080/btvPYP/add/videoPiece/", "{\"data\":\"173528\",\"pid\":\"BTV4\",\"fileAddr\":\"/mnt/data/remote/fingersharefolder/videos/pieces/20180514-061830-20180514-070331.ts\"}");
//		String ss = sendPost("http://10.8.12.133:7702/api/fingerprint/v2/delete", "sampleId=ADV1517905292907717");
//		System.out.println(ss);
    	String requestUrl_add = "http://10.1.121.105/WebAdvProgName/Service.asmx?op=addProgMsg";
    	String requestUrl_update = "http://10.1.121.105/WebAdvProgName/Service.asmx?op=updProgMsg";
    	String requestUrl_delete = "http://10.1.121.105/WebAdvProgName/Service.asmx?op=delProgMsg";
    	
    	String soap_add = "<?xml version=\"1.0\" encoding=\"utf-8\"?>"+
				   "<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"+
			       "<soap:Body>"+
				   "<addProgMsg xmlns=\"http://tempuri.org/\">"+
				   "<gg_idno>116897</gg_idno>"+
				   "<gg_name>特一止咳宝片</gg_name>"+
				   "<gg_subname>白衣女人/咳/痰/喘/三格/一盒/股票代码：002728/15秒版</gg_subname>"+
				   "<gg_date>2018/06/01</gg_date>"+
				   "<gg_type>0</gg_type>"+
				   "<gg_def>06</gg_def>"+
				   "<gg_len>15</gg_len>"+
				   "<gg_script>040115</gg_script>"+
				   "<gg_froname>测试数据</gg_froname>"+
				   "<gg_tapeno>test0607</gg_tapeno>"+
				   "<add_person>John</add_person>"+
				   "</addProgMsg>"+
				   "</soap:Body>"+
				   "</soap:Envelope>";
    	
    	String soap_update = "<?xml version=\"1.0\" encoding=\"utf-8\"?>"+
    	           "<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"+
    	           "<soap:Body>"+
    	           "<updProgMsg xmlns=\"http://tempuri.org/\">"+
    	           "<gg_idno>116897</gg_idno>"+
    	           "<gg_name>特一止咳宝片(换)</gg_name>"+
    	           "<gg_subname>白衣女人/咳/痰/喘/三格/一盒/股票代码：002728/15秒版/400777666</gg_subname>"+
    	           "<gg_date>2018/06/02</gg_date>"+
    	           "<gg_type>1</gg_type>"+
    	           "<gg_def>26</gg_def>"+
    	           "<gg_len>10</gg_len>"+
    	           "<gg_script>040116</gg_script>"+
    	           "<gg_froname>测试数据_1</gg_froname>"+
    	           "<gg_tapeno>test</gg_tapeno>"+
    	           "<add_person>ln</add_person>"+
    	           "<gg_name_bef>特一止咳宝片</gg_name_bef>"+
    	           "<gg_subname_bef>白衣女人/咳/痰/喘/三格/一盒/股票代码：002728/15秒版</gg_subname_bef>"+
    	           "<gg_date_bef>2018/06/01</gg_date_bef>"+
    	           "<gg_type_bef>0</gg_type_bef>"+
    	           "<gg_def_bef>06</gg_def_bef>"+
    	           "<gg_len_bef>15</gg_len_bef>"+
    	           "<gg_script_bef>040115</gg_script_bef>"+
    	           "<gg_froname_bef>测试数据</gg_froname_bef>"+
    	           "<gg_tapeno_bef>040115</gg_tapeno_bef>"+
    	           "<add_person_bef>John</add_person_bef>"+
    	           "</updProgMsg>"+
    	           "</soap:Body>"+
    	           "</soap:Envelope>";
    	
    	String soap_delete = "<?xml version=\"1.0\" encoding=\"utf-8\"?>"+
 	               "<soap:Envelope xmlns:xsi=\"http://www.w3.org/2001/XMLSchema-instance\" xmlns:xsd=\"http://www.w3.org/2001/XMLSchema\" xmlns:soap=\"http://schemas.xmlsoap.org/soap/envelope/\">"+
    			   "<soap:Body>"+
 	               "<delProgMsg xmlns=\"http://tempuri.org/\">"+
    			   "<gg_idno>116897</gg_idno>"+
 	               "<gg_name>特一止咳宝片(换)</gg_name>"+
    			   "<gg_subname>白衣女人/咳/痰/喘/三格/一盒/股票代码：002728/15秒版/400777666</gg_subname>"+
 	               "<gg_date>2018/06/01</gg_date>"+
    			   "<gg_type>0</gg_type>"+
 	               "<gg_def>06</gg_def>"+
    			   "<gg_len>15</gg_len>"+
 	               "<gg_script>040115</gg_script>"+
    			   "<gg_froname>测试数据</gg_froname>"+
 	               "<gg_tapeno>test0607</gg_tapeno>"+
    			   "<add_person>John</add_person>"+
 	               "</delProgMsg>"+
    			   "</soap:Body>"+
 	               "</soap:Envelope>";
    	sendWsPost(requestUrl_add, soap_add);
//    	sendWsPost(requestUrl_update, soap_update);
//    	sendWsPost(requestUrl_delete, soap_delete);
	}
    
}